[user]
  name = Hiroshi Ogawa
  email = hi.ogawa.zz@gmail.com

[alias]
  st = status
  ci = commit
  co = checkout
  br = branch
  lg = log --graph --oneline
  lga = log --graph --oneline --all
  diff-no-lock = diff -- ':!*pnpm-lock.yaml' ':!*yarn.lock' ':!*package-lock.json'

  # Push
  pc = "! git push origin $(git rev-parse --abbrev-ref HEAD) && true"
  pcf = "! git push -f origin $(git rev-parse --abbrev-ref HEAD) && true"

  # Fetch and merge fast-forward (thus "safe" pull)
  # $ git sfpl <remote=origin>
  sfpl = "! remote=${1:-origin} && branch=$(git rev-parse --abbrev-ref HEAD) && git fetch $remote $branch && git merge --ff-only $remote/$branch && true"

  # Fetch remote and checkout
  # $ git fco <branch> <remote=origin>
  fco = "! branch=${1} remote=${2:-origin} && git fetch $remote $branch && git co $branch && true"

  # Add remote repo
  # $ git remote-gh hi-ogawa Stockfish
  remote-gh = "! remote=${1} repo=${2} && git remote add $remote git@github.com:$remote/$repo.git && true"

  # Delete merged branch
  # $ git brgc <branch=master>
  brgc = "! git branch --merged | grep -E -v \"^\\*|${1:-master}\" | xargs git branch -d && true"

  # Checkout github remote PR
  # $ git ghpr-co <PR-id> <remote=upstream>
  # $ git ghpr-reset <PR-id> <remote=upstream> <branch=master>
  ghpr-co =    "! name=PR-$1 && remote=${2:-upstream} && git fetch $remote pull/$1/head:PR-$1 && git co PR-$1 && true"
  ghpr-reset = "! name=PR-$1 && remote=${2:-upstream} && branch=${3:-master} && git co $branch && (git br -D $name || true) && git ghpr-co $1 $2 && true"


[core]
  excludesfile = ~/.gitignore-global

[github]
  user = hi-ogawa

[color]
  ui = auto

[commit]
  gpgsign = true

[diff]
  tool = vscode
[difftool "vscode"]
  cmd = code-insiders --wait --diff $LOCAL $REMOTE
